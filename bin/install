#!/usr/bin/env bash

set -euo pipefail

[ -z "${ASDF_INSTALL_TYPE+x}" ] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[ -z "${ASDF_INSTALL_VERSION+x}" ] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[ -z "${ASDF_INSTALL_PATH+x}" ] && echo "ASDF_INSTALL_PATH is required" && exit 1

install() {
    local install_type=$1
    local version=$2
    local install_path=$3
    local bin_install_path="$install_path/bin"

    local platform
    platform=$(uname)
    local arch
    arch=$(uname -m)
    local bin_install_path="$install_path/bin"
    local binary_path="$bin_install_path/k9s"

    local download_url
    download_url=$(get_download_url "$version" "$platform" "$arch")

    local tmp_download_dir
    if [ "$TMPDIR" = "" ]; then
        tmp_download_dir=$(mktemp -d -t k9s_XXXXXX)
    else
        tmp_download_dir=$TMPDIR
    fi

    local download_path="$tmp_download_dir/k9s-${version}-${platform}"
    echo "Downloading k9s from ${download_url} to ${download_path}"
    curl -Lo "$download_path" "$download_url"

    echo "Creating bin directory"
    mkdir -p "${bin_install_path}"

    echo "Cleaning previous binaries"
    rm -f "$binary_path" 2>/dev/null || true

    tar -xzf ${download_path} --directory $tmp_download_dir

    cp ${tmp_download_dir}/k9s ${bin_install_path}
    chmod +x "${binary_path}"
}

get_download_url() {
    local version="$1"
    local platform="$2"
    local arch="$3"

    echo "https://github.com/derailed/k9s/releases/download/${version}/k9s_${version}_${platform}_${arch}.tar.gz"
}

install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
